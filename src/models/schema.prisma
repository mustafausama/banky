// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  SSN           String         @id
  firstName     String
  lastName      String
  email         String         @unique
  password      String
  address       String
  phoneNumber   String
  bankAccounts  BankAccount[]
  notifications Notification[]
}

model Bank {
  swiftcode    String        @id
  branchName   String
  bankAccounts BankAccount[]
}

model BankAccount {
  accountNumber         Int            @id @default(autoincrement())
  accountType           AccountType
  openingDate           DateTime       @default(now())
  balance               Float
  SSN                   String
  swiftcode             String
  user                  User           @relation(fields: [SSN], references: [SSN])
  bank                  Bank           @relation(fields: [swiftcode], references: [swiftcode])
  cards                 Card[]
  loans                 Loan[]
  receivingTransactions Transactions[] @relation("recipientBankAccount")
  sendingTransactions   Transactions[] @relation("senderBankAccount")
}

model Card {
  cardId        Int         @id @default(autoincrement())
  cardNumber    String      @unique
  cvv           String
  expiryDate    DateTime
  accountNumber Int
  bankAccount   BankAccount @relation(fields: [accountNumber], references: [accountNumber])
}

model Loan {
  loanId        Int         @id @default(autoincrement())
  amount        Float
  interestRate  Float
  startDate     DateTime
  endDate       DateTime
  accountNumber Int
  bankAccount   BankAccount @relation(fields: [accountNumber], references: [accountNumber])
}

model Transactions {
  transactionId          Int         @id @default(autoincrement())
  amount                 Float
  date                   DateTime    @default(now())
  createdAt              DateTime    @default(now())
  note                   String
  senderAccountNumber    Int
  recipientAccountNumber Int
  senderBankAccount      BankAccount @relation("senderBankAccount", fields: [senderAccountNumber], references: [accountNumber])
  recipientBankAccount   BankAccount @relation("recipientBankAccount", fields: [recipientAccountNumber], references: [accountNumber])
}

model Notification {
  notificationId Int      @id @default(autoincrement())
  message        String
  date           DateTime @default(now())
  SSN            String
  user           User     @relation(fields: [SSN], references: [SSN])
}

model ATM {
  atmId     Int    @id @default(autoincrement())
  latitude  Float
  longitude Float
  bankId    String
}

model Currency {
  currencyId Int    @id @default(autoincrement())
  name       String
  symbol     String
  exchange   Float
}

model Review {
  reviewId Int     @id @default(autoincrement())
  rating   Int
  message  String
}

enum AccountType {
  SAVINGS
  CURRENT
}
